tasks:
- name: run master
  shell: "{{ item }}"
  register: rslt
  when: rslt.rc == 0
  with_items:
    - sudo apt update
    - sudo apt -y upgrade && sudo systemctl reboot
    - sudo apt update
    - sudo apt -y install curl apt-transport-https curl gnupg lsb-release
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - sudo apt update
    - sudo apt -y install vim git curl wget kubelet kubeadm kubectl
    - sudo apt-mark hold kubelet kubeadm kubectl
    - sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    - sudo swapoff -a    
    - sudo modprobe overlay
    - sudo modprobe br_netfilter
    

- name: set net.bridge.bridge-nf-call-iptables in /etc/sysctl.conf
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"
    state: present

- name: set net.ipv4.ip_forward in /etc/sysctl.conf
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present

- name: set net.bridge.bridge-nf-call-ip6tables in /etc/sysctl.conf
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: "1"
    state: present



- name: run master - 2
  shell: "{{ item }}"
  register: rslt
  when: rslt.rc == 0
  with_items:
    - sudo sysctl --system
    - sudo apt update
    - sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - sudo apt update
    - sudo apt install -y containerd.io docker-ce docker-ce-cli    
    - sudo mkdir -p /etc/systemd/system/docker.service.d   



- name: add lines to a file
  lineinfile: 
    state: present
    insertafter: EOF
    dest: /etc/docker/daemon.json
    line: "{{ item }}"
  with_items:
   - {	 
   - "exec-opts": ["native.cgroupdriver=systemd"],
   - "log-driver": "json-file",
   - "log-opts": {
   - "max-size": "100m"
   - },
   - "storage-driver": "overlay2"	
   - }
   

- name: run master - 3
  shell: "{{ item }}"
  register: rslt
  when: rslt.rc == 0
  with_items:
    - sudo systemctl daemon-reload 
    - sudo systemctl restart docker
    - sudo systemctl enable docker
    - sudo systemctl enable kubelet
    - sudo kubeadm config images pull
    - sudo kubeadm init --pod-network-cidr 10.244.0.0/16   --control-plane-endpoint {{ ansible_eth0.ipv4.address }}     
    - mkdir -p $HOME/.kube
    - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    - sudo chown $(id -u):$(id -g) $HOME/.kube/config 
    - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml    
    - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
    - kubectl get pods --all-namespaces
